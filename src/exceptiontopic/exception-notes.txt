Exception---Abnormal things--operations.---JVM code crashed
---------

	statement---1
	statement---2
	statement---3
	statement---4
	statement---5---raise exception--JVM execution stop---code crashed
	statement---6
	statement---7
	statement---8
	statement---9
	statement---10
----------------------------------------------------------------------------------------------------
			Type of Exception
			-------------------
	1) checked Exception			2) Un-checked Exception	
	----------------------			-------------------------
	compiletime Exception			Runtime Exception
	compiler--compiletime			Runtime---JVM


			Hierarchy of Exception
			------------------------
				
				Throwable(C)
				   |
				Exception(C)
				   |
	---------------------------------------------------------
	|--checked exception    				|--Unchecked exception
--IOException						RuntimeException(C)	
--SQLException							|
--FileNotFoundException				---ArithmeticException	
...						---NullPointerException
						---StringIndexOutofBoundException
						---ArrayIndexOutofBoundException
						---NumberFormatException
						---ClasscastException....



Exception:- Abnormal Scenario
----------

	int no1,no2,ans

	ans = no1 / no2;	

1) ArithmeticException:-
---------------------------

	10 / 0------raise Exception===>code crashed

2) NullpointerException:-
---------------------------
	String name = null;

	System.out.println(name.length());// Nullpointer Exception


3) ArrayIndexoutofboundException:-
---------------------------

	int a[] = new int[5];

	a[5] = 50;

4) StringIndexOutofBoundException:-
-----------------------------------

	//	       01234	
	String name = "royal";

	SOP(name.charAt(5));// StringindexOutofBoundException

5) NumberFormateException:-
---------------------------
	String value = "abcd";// String---int

	int no = Integer.parseInt(value);// NumberFormatException

6) ClassCastException:-
------------------------
	A(test1())
	|
 ----------------
 |              |
 B              C		
(test1())	(test1())
(test2())	(test3())

	// Upcasting
	A obj = new B();
	obj.test1();	
	obj.test2();//C.E

	// Downcasting
	B obj1 = (B)obj;// CompileTime --PASS
	obj1.test2(); // B--test2()

Finally block:-
---------------

	try
	{
		// raise exception ----cose
	}catch()
	{
		// exception Handle

	}finally
	{
		// comp....execute code
	}
-------------------------------------------------------------

	try
	{
		// raise exception ----cose
	}finally
	{
		// comp....execute code
	}
------------------------------------------------------
	try
	{
		// raise exception ----cose
	}catch()
	{
		// exception Handle

	}
------------------------------------------------------
	try
	{
		// raise exception ----cose
	}catch()
	{
		// exception Handle

	}catch()
	{
		// exception Handle

	}


------------------------------------------------------
	try
	{
		// raise exception ----cose
	}catch()
	{
		// exception Handle

	}catch()
	{
		// exception Handle

	}finally
	{
		// comp....execute code
	}




throw--raise custom(User Defined) exception

throws---pass on // exception declare method























